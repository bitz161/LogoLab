{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Projects\\\\LogoLab\\\\src\\\\components\\\\posts\\\\posts.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport \"./posts.styles.scss\";\nimport Comments from \"../comments/comments.components\";\nimport { CommunityContext } from \"../../utilities/context/community.context\";\nimport { UserContext } from \"../../utilities/context/user.context\";\nimport InsertComment from \"../insertComment/insertComment.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = ({\n  communityPosts\n}) => {\n  _s();\n  const {\n    postData,\n    commentData,\n    setPostData\n  } = useContext(CommunityContext);\n  const [sortedPosts, setSortedPosts] = useState([]);\n  const {\n    currentUser\n  } = useContext(UserContext);\n  useEffect(() => {\n    const sortedPosts = postData.slice().sort((a, b) => new Date(b.dateCreated) - new Date(a.dateCreated));\n    setSortedPosts(sortedPosts);\n  }, [postData]);\n  const toggleCommentStatus = id => {\n    setPostData(postData.map(post => post.ID === id ? {\n      ...post,\n      commentStatus: !post.commentStatus\n    } : post));\n  };\n  const toggleLikePost = id => {\n    if (!currentUser) return;\n    setPostData(postData.map(post => {\n      if (post.ID === id) {\n        const likedIndex = post.likedBy.findIndex(like => like.userID === currentUser.uid);\n        const updatedLikedBy = likedIndex !== -1 ? post.likedBy.filter(like => like.userID !== currentUser.uid) : [...post.likedBy, {\n          userID: currentUser.uid,\n          username: currentUser.displayName,\n          displayProfile: currentUser.displayProfile\n        }];\n        return {\n          ...post,\n          likedBy: updatedLikedBy\n        };\n      }\n      return post;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postsContainer\",\n    children: sortedPosts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postsContentsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"posterInfoContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.createdBy.displayProfile || `https://robohash.org/${post.createdBy.userID}?set=set2`,\n          alt: \"Poster Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: post.createdBy.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.postDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => toggleLikePost(post.ID),\n          children: [post.likedBy.length, \" Liked\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => toggleCommentStatus(post.ID),\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), post.commentStatus && /*#__PURE__*/_jsxDEV(Comments, {\n        commentDatas: commentData,\n        postID: post.ID,\n        enableComment: toggleCommentStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(InsertComment, {\n        postID: post.ID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, post.ID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"KXz3rJgg0TQuC/hqXJryeksvEdw=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Comments","CommunityContext","UserContext","InsertComment","jsxDEV","_jsxDEV","Posts","communityPosts","_s","postData","commentData","setPostData","sortedPosts","setSortedPosts","currentUser","slice","sort","a","b","Date","dateCreated","toggleCommentStatus","id","map","post","ID","commentStatus","toggleLikePost","likedIndex","likedBy","findIndex","like","userID","uid","updatedLikedBy","filter","username","displayName","displayProfile","className","children","src","createdBy","alt","fileName","_jsxFileName","lineNumber","columnNumber","postDescription","onClick","length","commentDatas","postID","enableComment","_c","$RefreshReg$"],"sources":["C:/Projects/Projects/LogoLab/src/components/posts/posts.component.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"./posts.styles.scss\";\r\nimport Comments from \"../comments/comments.components\";\r\nimport { CommunityContext } from \"../../utilities/context/community.context\";\r\nimport { UserContext } from \"../../utilities/context/user.context\";\r\nimport InsertComment from \"../insertComment/insertComment.component\";\r\n\r\nconst Posts = ({ communityPosts }) => {\r\n  const { postData, commentData, setPostData } = useContext(CommunityContext);\r\n  const [sortedPosts, setSortedPosts] = useState([]);\r\n  const { currentUser } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    const sortedPosts = postData\r\n      .slice()\r\n      .sort((a, b) => new Date(b.dateCreated) - new Date(a.dateCreated));\r\n    setSortedPosts(sortedPosts);\r\n  }, [postData]);\r\n\r\n  const toggleCommentStatus = (id) => {\r\n    setPostData(\r\n      postData.map((post) =>\r\n        post.ID === id ? { ...post, commentStatus: !post.commentStatus } : post\r\n      )\r\n    );\r\n  };\r\n\r\n  const toggleLikePost = (id) => {\r\n    if (!currentUser) return;\r\n\r\n    setPostData(\r\n      postData.map((post) => {\r\n        if (post.ID === id) {\r\n          const likedIndex = post.likedBy.findIndex(\r\n            (like) => like.userID === currentUser.uid\r\n          );\r\n          const updatedLikedBy =\r\n            likedIndex !== -1\r\n              ? post.likedBy.filter((like) => like.userID !== currentUser.uid)\r\n              : [\r\n                  ...post.likedBy,\r\n                  {\r\n                    userID: currentUser.uid,\r\n                    username: currentUser.displayName,\r\n                    displayProfile: currentUser.displayProfile,\r\n                  },\r\n                ];\r\n          return { ...post, likedBy: updatedLikedBy };\r\n        }\r\n        return post;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"postsContainer\">\r\n      {sortedPosts.map((post) => (\r\n        <div className=\"postsContentsContainer\" key={post.ID}>\r\n          <div className=\"posterInfoContainer\">\r\n            <img\r\n              src={\r\n                post.createdBy.displayProfile ||\r\n                `https://robohash.org/${post.createdBy.userID}?set=set2`\r\n              }\r\n              alt=\"Poster Avatar\"\r\n            />\r\n            <div>{post.createdBy.username}</div>\r\n          </div>\r\n          <p>{post.postDescription}</p>\r\n          <hr />\r\n          <div>\r\n            <div onClick={() => toggleLikePost(post.ID)}>\r\n              {post.likedBy.length} Liked\r\n            </div>\r\n            <div onClick={() => toggleCommentStatus(post.ID)}>Comment</div>\r\n          </div>\r\n          {post.commentStatus && (\r\n            <Comments\r\n              commentDatas={commentData}\r\n              postID={post.ID}\r\n              enableComment={toggleCommentStatus}\r\n            />\r\n          )}\r\n          <InsertComment postID={post.ID} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}