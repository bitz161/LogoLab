{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Projects\\\\LogoLab\\\\src\\\\components\\\\insertComment\\\\insertComment.component.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport \"./insertComment.styles.scss\";\nimport { CommunityContext } from \"../../utilities/context/community.context\";\nimport { UserContext } from \"../../utilities/context/user.context\";\nimport sendIcon from \"../../resources/images/send.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InsertComment = ({\n  postID\n}) => {\n  _s();\n  const [postComment, setPostComment] = useState(\"\");\n  const {\n    commentData,\n    setCommentData\n  } = useContext(CommunityContext);\n  const {\n    currentUser\n  } = useContext(UserContext);\n  const handleInputChange = event => {\n    setPostComment(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newComment = {\n      commentID: commentData.length + 1,\n      postID: postID,\n      commentText: postComment,\n      dateCreated: new Date().toISOString(),\n      createdBy: {\n        userID: currentUser.uid,\n        username: currentUser.displayName,\n        displayProfile: currentUser.photoURL\n      }\n    };\n    setCommentData([...commentData, newComment]);\n    console.log(newComment);\n    setPostComment(\"\"); // Clear the input field after submission\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"insertCommentContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Comment\",\n        value: postComment,\n        onChange: handleInputChange,\n        disabled: !currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CommentButtonContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: sendIcon,\n          alt: \"\",\n          className: \"rounded-none\",\n          type: \"submit\",\n          disabled: !currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(InsertComment, \"CdGxph+jCXUYJESfel8t3AHQdMc=\");\n_c = InsertComment;\nexport default InsertComment;\nvar _c;\n$RefreshReg$(_c, \"InsertComment\");","map":{"version":3,"names":["useContext","useState","CommunityContext","UserContext","sendIcon","jsxDEV","_jsxDEV","InsertComment","postID","_s","postComment","setPostComment","commentData","setCommentData","currentUser","handleInputChange","event","target","value","handleSubmit","preventDefault","newComment","commentID","length","commentText","dateCreated","Date","toISOString","createdBy","userID","uid","username","displayName","displayProfile","photoURL","console","log","className","children","onSubmit","placeholder","onChange","disabled","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","_c","$RefreshReg$"],"sources":["C:/Projects/Projects/LogoLab/src/components/insertComment/insertComment.component.jsx"],"sourcesContent":["import { useContext, useState } from \"react\";\r\nimport \"./insertComment.styles.scss\";\r\nimport { CommunityContext } from \"../../utilities/context/community.context\";\r\nimport { UserContext } from \"../../utilities/context/user.context\";\r\nimport sendIcon from \"../../resources/images/send.svg\";\r\n\r\nconst InsertComment = ({ postID }) => {\r\n  const [postComment, setPostComment] = useState(\"\");\r\n  const { commentData, setCommentData } = useContext(CommunityContext);\r\n  const { currentUser } = useContext(UserContext);\r\n\r\n  const handleInputChange = (event) => {\r\n    setPostComment(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newComment = {\r\n      commentID: commentData.length + 1,\r\n      postID: postID,\r\n      commentText: postComment,\r\n      dateCreated: new Date().toISOString(),\r\n      createdBy: {\r\n        userID: currentUser.uid,\r\n        username: currentUser.displayName,\r\n        displayProfile: currentUser.photoURL,\r\n      },\r\n    };\r\n\r\n    setCommentData([...commentData, newComment]);\r\n    console.log(newComment);\r\n    setPostComment(\"\"); // Clear the input field after submission\r\n  };\r\n\r\n  return (\r\n    <div className=\"insertCommentContainer\">\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          placeholder=\"Enter Comment\"\r\n          value={postComment}\r\n          onChange={handleInputChange}\r\n          disabled={!currentUser}\r\n        />\r\n        <div className=\"CommentButtonContainer\">\r\n          <img\r\n            src={sendIcon}\r\n            alt=\"\"\r\n            className=\"rounded-none\"\r\n            type=\"submit\"\r\n            disabled={!currentUser}\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InsertComment;\r\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,OAAO,6BAA6B;AACpC,SAASC,gBAAgB,QAAQ,2CAA2C;AAC5E,SAASC,WAAW,QAAQ,sCAAsC;AAClE,OAAOC,QAAQ,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM;IAAEW,WAAW;IAAEC;EAAe,CAAC,GAAGb,UAAU,CAACE,gBAAgB,CAAC;EACpE,MAAM;IAAEY;EAAY,CAAC,GAAGd,UAAU,CAACG,WAAW,CAAC;EAE/C,MAAMY,iBAAiB,GAAIC,KAAK,IAAK;IACnCL,cAAc,CAACK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,YAAY,GAAIH,KAAK,IAAK;IAC9BA,KAAK,CAACI,cAAc,CAAC,CAAC;IAEtB,MAAMC,UAAU,GAAG;MACjBC,SAAS,EAAEV,WAAW,CAACW,MAAM,GAAG,CAAC;MACjCf,MAAM,EAAEA,MAAM;MACdgB,WAAW,EAAEd,WAAW;MACxBe,WAAW,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACrCC,SAAS,EAAE;QACTC,MAAM,EAAEf,WAAW,CAACgB,GAAG;QACvBC,QAAQ,EAAEjB,WAAW,CAACkB,WAAW;QACjCC,cAAc,EAAEnB,WAAW,CAACoB;MAC9B;IACF,CAAC;IAEDrB,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAES,UAAU,CAAC,CAAC;IAC5Cc,OAAO,CAACC,GAAG,CAACf,UAAU,CAAC;IACvBV,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,oBACEL,OAAA;IAAK+B,SAAS,EAAC,wBAAwB;IAAAC,QAAA,eACrChC,OAAA;MAAMiC,QAAQ,EAAEpB,YAAa;MAAAmB,QAAA,gBAC3BhC,OAAA;QACEkC,WAAW,EAAC,eAAe;QAC3BtB,KAAK,EAAER,WAAY;QACnB+B,QAAQ,EAAE1B,iBAAkB;QAC5B2B,QAAQ,EAAE,CAAC5B;MAAY;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFxC,OAAA;QAAK+B,SAAS,EAAC,wBAAwB;QAAAC,QAAA,eACrChC,OAAA;UACEyC,GAAG,EAAE3C,QAAS;UACd4C,GAAG,EAAC,EAAE;UACNX,SAAS,EAAC,cAAc;UACxBY,IAAI,EAAC,QAAQ;UACbP,QAAQ,EAAE,CAAC5B;QAAY;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACrC,EAAA,CAlDIF,aAAa;AAAA2C,EAAA,GAAb3C,aAAa;AAoDnB,eAAeA,aAAa;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}