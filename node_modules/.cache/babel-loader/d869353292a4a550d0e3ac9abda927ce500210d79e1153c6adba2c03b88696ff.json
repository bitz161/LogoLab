{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Projects\\\\LogoLab\\\\src\\\\utilities\\\\context\\\\logos.context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LogoContext = /*#__PURE__*/createContext({\n  logos: null,\n  setLogos: () => null\n});\nexport const LogoProvider = ({\n  children\n}) => {\n  _s();\n  const [logos, setLogos] = useState(null);\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(logo => {\n      setLogos(logo);\n    });\n  }, []);\n\n  //TODO: Creating a logo http request\n\n  const value = {\n    logos,\n    setLogos\n  };\n  return /*#__PURE__*/_jsxDEV(LogoContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n\n//Temporary HTTP request\n\n// const [searchField, setSearchField] = useState(\"\");\n// const [monsters, setMonsters] = useState([]);\n// const [filteredMonsters, setFilteredMonsters] = useState(monsters);\n\n// useEffect(() => {\n//   fetch(\"https://jsonplaceholder.typicode.com/users\")\n//     .then((response) => response.json())\n//     .then((users) => {\n//       setMonsters(users);\n//     });\n// }, []);\n\n// useEffect(() => {\n//   const newFilteredMonster = monsters.filter((monster) => {\n//     return monster.name.toLocaleLowerCase().includes(searchField);\n//   });\n//   setFilteredMonsters(newFilteredMonster);\n// }, [monsters, searchField]);\n\n// const onSearchChange = (event) => {\n//   const searchFieldString = event.target.value.toLocaleLowerCase();\n//   setSearchField(searchFieldString);\n// };\n_s(LogoProvider, \"v53lSKiyxKNHM0n0Qn1/AVzVBT8=\");\n_c = LogoProvider;\nvar _c;\n$RefreshReg$(_c, \"LogoProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","jsxDEV","_jsxDEV","LogoContext","logos","setLogos","LogoProvider","children","_s","fetch","then","response","json","logo","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Projects/Projects/LogoLab/src/utilities/context/logos.context.jsx"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const LogoContext = createContext({\r\n  logos: null,\r\n  setLogos: () => null,\r\n});\r\n\r\nexport const LogoProvider = ({ children }) => {\r\n  const [logos, setLogos] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((logo) => {\r\n        setLogos(logo);\r\n      });\r\n  }, []);\r\n\r\n  //TODO: Creating a logo http request\r\n\r\n  const value = { logos, setLogos };\r\n  return <LogoContext.Provider value={value}>{children}</LogoContext.Provider>;\r\n};\r\n\r\n//Temporary HTTP request\r\n\r\n// const [searchField, setSearchField] = useState(\"\");\r\n// const [monsters, setMonsters] = useState([]);\r\n// const [filteredMonsters, setFilteredMonsters] = useState(monsters);\r\n\r\n// useEffect(() => {\r\n//   fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n//     .then((response) => response.json())\r\n//     .then((users) => {\r\n//       setMonsters(users);\r\n//     });\r\n// }, []);\r\n\r\n// useEffect(() => {\r\n//   const newFilteredMonster = monsters.filter((monster) => {\r\n//     return monster.name.toLocaleLowerCase().includes(searchField);\r\n//   });\r\n//   setFilteredMonsters(newFilteredMonster);\r\n// }, [monsters, searchField]);\r\n\r\n// const onSearchChange = (event) => {\r\n//   const searchFieldString = event.target.value.toLocaleLowerCase();\r\n//   setSearchField(searchFieldString);\r\n// };\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC;EACvCM,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAEA,CAAA,KAAM;AAClB,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACJ,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdR,QAAQ,CAACQ,IAAI,CAAC;IAChB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,MAAMC,KAAK,GAAG;IAAEV,KAAK;IAAEC;EAAS,CAAC;EACjC,oBAAOH,OAAA,CAACC,WAAW,CAACY,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAP,QAAA,EAAEA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;;AAED;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAAX,EAAA,CAzCaF,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}