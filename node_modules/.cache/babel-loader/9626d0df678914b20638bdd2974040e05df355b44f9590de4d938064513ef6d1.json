{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Projects\\\\LogoLab\\\\src\\\\utilities\\\\context\\\\user.context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { onAuthStateChangedListener } from \"../utilities/firebase/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({\n  currentUser: null,\n  setCurrentUser: () => null\n});\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const value = {\n    currentUser,\n    setCurrentUser\n  };\n  useEffect(() => {\n    const unsubscribe = onAuthStateChangedListener(user => {\n      setCurrentUser(user);\n    });\n\n    // Clean up the subscription on unmount\n    return unsubscribe;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n_s(UserProvider, \"Y5F2pQQk2LZA5WRO2+bvRm5iRuo=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","onAuthStateChangedListener","jsxDEV","_jsxDEV","UserContext","currentUser","setCurrentUser","UserProvider","children","_s","value","unsubscribe","user","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Projects/Projects/LogoLab/src/utilities/context/user.context.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport { onAuthStateChangedListener } from \"../utilities/firebase/firebase\";\r\n\r\nexport const UserContext = createContext({\r\n  currentUser: null,\r\n  setCurrentUser: () => null,\r\n});\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const value = { currentUser, setCurrentUser };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChangedListener((user) => {\r\n      setCurrentUser(user);\r\n    });\r\n\r\n    // Clean up the subscription on unmount\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,0BAA0B,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5E,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC;EACvCO,WAAW,EAAE,IAAI;EACjBC,cAAc,EAAEA,CAAA,KAAM;AACxB,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACJ,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMW,KAAK,GAAG;IAAEL,WAAW;IAAEC;EAAe,CAAC;EAE7CN,SAAS,CAAC,MAAM;IACd,MAAMW,WAAW,GAAGV,0BAA0B,CAAEW,IAAI,IAAK;MACvDN,cAAc,CAACM,IAAI,CAAC;IACtB,CAAC,CAAC;;IAEF;IACA,OAAOD,WAAW;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOR,OAAA,CAACC,WAAW,CAACS,QAAQ;IAACH,KAAK,EAAEA,KAAM;IAAAF,QAAA,EAAEA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAACR,EAAA,CAdWF,YAAY;AAAAW,EAAA,GAAZX,YAAY;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}