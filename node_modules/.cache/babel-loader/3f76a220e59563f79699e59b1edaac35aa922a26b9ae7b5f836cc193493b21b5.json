{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Projects\\\\LogoLab\\\\src\\\\components\\\\comments\\\\comments.components.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./comments.styles.scss\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Comments = ({\n  commentDatas,\n  postID,\n  enableComment\n}) => {\n  _s();\n  const [sortedComments, setSortedComments] = useState([]);\n\n  // Function to sort and update comments whenever commentDatas or postID changes\n  useEffect(() => {\n    const filteredComments = commentDatas.filter(comment => comment.postID === postID);\n    const sorted = filteredComments.sort((a, b) => new Date(b.dateCreated) - new Date(a.dateCreated));\n    setSortedComments(sorted);\n  }, [commentDatas, postID]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentContainer\",\n      children: sortedComments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: comment.commentText\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Comments, \"UqgAu5sIoVG+DJMRiOL1ip0We/Y=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Comments","commentDatas","postID","enableComment","_s","sortedComments","setSortedComments","filteredComments","filter","comment","sorted","sort","a","b","Date","dateCreated","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","commentText","_c","$RefreshReg$"],"sources":["C:/Projects/Projects/LogoLab/src/components/comments/comments.components.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./comments.styles.scss\";\r\n\r\nconst Comments = ({ commentDatas, postID, enableComment }) => {\r\n  const [sortedComments, setSortedComments] = useState([]);\r\n\r\n  // Function to sort and update comments whenever commentDatas or postID changes\r\n  useEffect(() => {\r\n    const filteredComments = commentDatas.filter(\r\n      (comment) => comment.postID === postID\r\n    );\r\n    const sorted = filteredComments.sort(\r\n      (a, b) => new Date(b.dateCreated) - new Date(a.dateCreated)\r\n    );\r\n    setSortedComments(sorted);\r\n  }, [commentDatas, postID]);\r\n\r\n  return (\r\n    <>\r\n      <hr />\r\n      <div className=\"commentContainer\">\r\n        {sortedComments.map((comment, index) => (\r\n          <div key={index}>{comment.commentText}</div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,YAAY;EAAEC,MAAM;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMY,gBAAgB,GAAGN,YAAY,CAACO,MAAM,CACzCC,OAAO,IAAKA,OAAO,CAACP,MAAM,KAAKA,MAClC,CAAC;IACD,MAAMQ,MAAM,GAAGH,gBAAgB,CAACI,IAAI,CAClC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACD,CAAC,CAACE,WAAW,CAAC,GAAG,IAAID,IAAI,CAACF,CAAC,CAACG,WAAW,CAC5D,CAAC;IACDT,iBAAiB,CAACI,MAAM,CAAC;EAC3B,CAAC,EAAE,CAACT,YAAY,EAAEC,MAAM,CAAC,CAAC;EAE1B,oBACEL,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNvB,OAAA;MAAKwB,SAAS,EAAC,kBAAkB;MAAAL,QAAA,EAC9BX,cAAc,CAACiB,GAAG,CAAC,CAACb,OAAO,EAAEc,KAAK,kBACjC1B,OAAA;QAAAmB,QAAA,EAAkBP,OAAO,CAACe;MAAW,GAA3BD,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA4B,CAC5C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAAChB,EAAA,CAxBIJ,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AA0Bd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}