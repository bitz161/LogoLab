{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Projects\\\\LogoLab\\\\src\\\\components\\\\postPage\\\\postPage.component.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useContext } from \"react\";\nimport Posts from \"../posts/posts.component\";\nimport Sidebar from \"../sidebar/sidebar.component\";\nimport \"./postPage.styles.scss\";\nimport { CommunityContext } from \"../../utilities/context/community.context\";\nimport { UserContext } from \"../../utilities/context/user.context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostPage = () => {\n  _s();\n  const [getPostID, setGetPostID] = useState(null);\n  const [postDescription, setPostDescription] = useState(\"\");\n  const {\n    postData,\n    setPostData\n  } = useContext(CommunityContext);\n  const {\n    currentUser\n  } = useContext(UserContext);\n  const handleInputChange = event => {\n    setPostDescription(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newPost = {\n      ID: postData.length + 1,\n      // assuming postData is an array and IDs are sequential\n      postDescription: postDescription,\n      dateCreated: new Date().toISOString(),\n      status: \"active\",\n      commentStatus: false,\n      createdBy: {\n        userID: currentUser.uid,\n        // assuming a static user ID for the creator\n        username: currentUser.displayName,\n        displayProfile: currentUser.photoURL\n      },\n      likedBy: []\n    };\n    setPostData([...postData, newPost]);\n    console.log(newPost);\n    setPostDescription(\"\"); // Clear the input field after submission\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postpageContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Enter Post\",\n            value: postDescription,\n            onChange: handleInputChange,\n            disabled: !currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postButtonContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"rounded-none\",\n              type: \"submit\",\n              disabled: !currentUser,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setPostDescription(\"\"),\n              disabled: !currentUser,\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Posts, {\n        setGetPostID: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(PostPage, \"lHb6cQ0efATmVBV5HIQsD+3+WuQ=\");\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["useState","useContext","Posts","Sidebar","CommunityContext","UserContext","jsxDEV","_jsxDEV","PostPage","_s","getPostID","setGetPostID","postDescription","setPostDescription","postData","setPostData","currentUser","handleInputChange","event","target","value","handleSubmit","preventDefault","newPost","ID","length","dateCreated","Date","toISOString","status","commentStatus","createdBy","userID","uid","username","displayName","displayProfile","photoURL","likedBy","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","disabled","type","onClick","_c","$RefreshReg$"],"sources":["C:/Projects/Projects/LogoLab/src/components/postPage/postPage.component.jsx"],"sourcesContent":["import { useState, useContext } from \"react\";\r\nimport Posts from \"../posts/posts.component\";\r\nimport Sidebar from \"../sidebar/sidebar.component\";\r\nimport \"./postPage.styles.scss\";\r\nimport { CommunityContext } from \"../../utilities/context/community.context\";\r\nimport { UserContext } from \"../../utilities/context/user.context\";\r\n\r\nconst PostPage = () => {\r\n  const [getPostID, setGetPostID] = useState(null);\r\n  const [postDescription, setPostDescription] = useState(\"\");\r\n  const { postData, setPostData } = useContext(CommunityContext);\r\n  const { currentUser } = useContext(UserContext);\r\n\r\n  const handleInputChange = (event) => {\r\n    setPostDescription(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newPost = {\r\n      ID: postData.length + 1, // assuming postData is an array and IDs are sequential\r\n      postDescription: postDescription,\r\n      dateCreated: new Date().toISOString(),\r\n      status: \"active\",\r\n      commentStatus: false,\r\n      createdBy: {\r\n        userID: currentUser.uid, // assuming a static user ID for the creator\r\n        username: currentUser.displayName,\r\n        displayProfile: currentUser.photoURL,\r\n      },\r\n      likedBy: [],\r\n    };\r\n\r\n    setPostData([...postData, newPost]);\r\n    console.log(newPost);\r\n    setPostDescription(\"\"); // Clear the input field after submission\r\n  };\r\n\r\n  return (\r\n    <div className=\"postpageContainer\">\r\n      <Sidebar />\r\n      <section>\r\n        <div className=\"post\">\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              placeholder=\"Enter Post\"\r\n              value={postDescription}\r\n              onChange={handleInputChange}\r\n              disabled={!currentUser}\r\n            />\r\n            <div className=\"postButtonContainer\">\r\n              <button\r\n                className=\"rounded-none\"\r\n                type=\"submit\"\r\n                disabled={!currentUser}>\r\n                Submit\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setPostDescription(\"\")}\r\n                disabled={!currentUser}>\r\n                Clear\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <Posts setGetPostID />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}