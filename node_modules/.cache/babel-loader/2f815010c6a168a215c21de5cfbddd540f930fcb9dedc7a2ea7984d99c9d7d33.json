{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { getFirestore, doc, setDoc, getDoc } from \"firebase/firestore\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBiGds-EpCkg8UN_D7enAacz4y_aoGFHbk\",\n  authDomain: \"logolab-92529.firebaseapp.com\",\n  projectId: \"logolab-92529\",\n  storageBucket: \"logolab-92529.appspot.com\",\n  messagingSenderId: \"1068429743853\",\n  appId: \"1:1068429743853:web:d4b132d290eef33ae65ee4\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n\n// Initialize Firebase Auth and Firestore\nconst auth = getAuth(firebaseApp);\nconst db = getFirestore(firebaseApp);\nconst provider = new GoogleAuthProvider();\n\n// Set custom parameters for the Google Auth provider\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\n\n// Function to store user data in Firestore\nconst createUserDocumentFromAuth = async userAuth => {\n  if (!userAuth) return;\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email,\n      photoURL\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        photoURL,\n        createdAt\n      });\n    } catch (error) {\n      console.error(\"Error creating user document:\", error);\n    }\n  }\n  return userDocRef;\n};\n\n// Export sign-in and sign-out functions\nexport const signInWithGooglePopup = async () => {\n  const result = await signInWithPopup(auth, provider);\n  await createUserDocumentFromAuth(result.user);\n  return result;\n};\nexport const signOutUser = () => signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);\nexport { auth, db };","map":{"version":3,"names":["initializeApp","getAuth","signInWithPopup","GoogleAuthProvider","signOut","onAuthStateChanged","getFirestore","doc","setDoc","getDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","auth","db","provider","setCustomParameters","prompt","createUserDocumentFromAuth","userAuth","userDocRef","uid","userSnapshot","exists","displayName","email","photoURL","createdAt","Date","error","console","signInWithGooglePopup","result","user","signOutUser","onAuthStateChangedListener","callback"],"sources":["C:/Projects/Projects/LogoLab/src/utilities/firebase/firebase.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getAuth,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  signOut,\r\n  onAuthStateChanged,\r\n} from \"firebase/auth\";\r\nimport { getFirestore, doc, setDoc, getDoc } from \"firebase/firestore\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBiGds-EpCkg8UN_D7enAacz4y_aoGFHbk\",\r\n  authDomain: \"logolab-92529.firebaseapp.com\",\r\n  projectId: \"logolab-92529\",\r\n  storageBucket: \"logolab-92529.appspot.com\",\r\n  messagingSenderId: \"1068429743853\",\r\n  appId: \"1:1068429743853:web:d4b132d290eef33ae65ee4\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\n\r\n// Initialize Firebase Auth and Firestore\r\nconst auth = getAuth(firebaseApp);\r\nconst db = getFirestore(firebaseApp);\r\nconst provider = new GoogleAuthProvider();\r\n\r\n// Set custom parameters for the Google Auth provider\r\nprovider.setCustomParameters({\r\n  prompt: \"select_account\",\r\n});\r\n\r\n// Function to store user data in Firestore\r\nconst createUserDocumentFromAuth = async (userAuth) => {\r\n  if (!userAuth) return;\r\n\r\n  const userDocRef = doc(db, \"users\", userAuth.uid);\r\n  const userSnapshot = await getDoc(userDocRef);\r\n\r\n  if (!userSnapshot.exists()) {\r\n    const { displayName, email, photoURL } = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await setDoc(userDocRef, {\r\n        displayName,\r\n        email,\r\n        photoURL,\r\n        createdAt,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error creating user document:\", error);\r\n    }\r\n  }\r\n\r\n  return userDocRef;\r\n};\r\n\r\n// Export sign-in and sign-out functions\r\nexport const signInWithGooglePopup = async () => {\r\n  const result = await signInWithPopup(auth, provider);\r\n  await createUserDocumentFromAuth(result.user);\r\n  return result;\r\n};\r\n\r\nexport const signOutUser = () => signOut(auth);\r\nexport const onAuthStateChangedListener = (callback) =>\r\n  onAuthStateChanged(auth, callback);\r\nexport { auth, db };\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SACEC,OAAO,EACPC,eAAe,EACfC,kBAAkB,EAClBC,OAAO,EACPC,kBAAkB,QACb,eAAe;AACtB,SAASC,YAAY,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,QAAQ,oBAAoB;;AAEtE;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,+BAA+B;EAC3CC,SAAS,EAAE,eAAe;EAC1BC,aAAa,EAAE,2BAA2B;EAC1CC,iBAAiB,EAAE,eAAe;EAClCC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,WAAW,GAAGjB,aAAa,CAACU,cAAc,CAAC;;AAEjD;AACA,MAAMQ,IAAI,GAAGjB,OAAO,CAACgB,WAAW,CAAC;AACjC,MAAME,EAAE,GAAGb,YAAY,CAACW,WAAW,CAAC;AACpC,MAAMG,QAAQ,GAAG,IAAIjB,kBAAkB,CAAC,CAAC;;AAEzC;AACAiB,QAAQ,CAACC,mBAAmB,CAAC;EAC3BC,MAAM,EAAE;AACV,CAAC,CAAC;;AAEF;AACA,MAAMC,0BAA0B,GAAG,MAAOC,QAAQ,IAAK;EACrD,IAAI,CAACA,QAAQ,EAAE;EAEf,MAAMC,UAAU,GAAGlB,GAAG,CAACY,EAAE,EAAE,OAAO,EAAEK,QAAQ,CAACE,GAAG,CAAC;EACjD,MAAMC,YAAY,GAAG,MAAMlB,MAAM,CAACgB,UAAU,CAAC;EAE7C,IAAI,CAACE,YAAY,CAACC,MAAM,CAAC,CAAC,EAAE;IAC1B,MAAM;MAAEC,WAAW;MAAEC,KAAK;MAAEC;IAAS,CAAC,GAAGP,QAAQ;IACjD,MAAMQ,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC;IAE5B,IAAI;MACF,MAAMzB,MAAM,CAACiB,UAAU,EAAE;QACvBI,WAAW;QACXC,KAAK;QACLC,QAAQ;QACRC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF;EAEA,OAAOT,UAAU;AACnB,CAAC;;AAED;AACA,OAAO,MAAMW,qBAAqB,GAAG,MAAAA,CAAA,KAAY;EAC/C,MAAMC,MAAM,GAAG,MAAMnC,eAAe,CAACgB,IAAI,EAAEE,QAAQ,CAAC;EACpD,MAAMG,0BAA0B,CAACc,MAAM,CAACC,IAAI,CAAC;EAC7C,OAAOD,MAAM;AACf,CAAC;AAED,OAAO,MAAME,WAAW,GAAGA,CAAA,KAAMnC,OAAO,CAACc,IAAI,CAAC;AAC9C,OAAO,MAAMsB,0BAA0B,GAAIC,QAAQ,IACjDpC,kBAAkB,CAACa,IAAI,EAAEuB,QAAQ,CAAC;AACpC,SAASvB,IAAI,EAAEC,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}