{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Projects\\\\LogoLab\\\\src\\\\components\\\\comments\\\\comments.components.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./comments.styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = ({\n  commentDatas,\n  postID,\n  enableComment\n}) => {\n  _s();\n  const [sortedComments, setSortedComments] = useState([]);\n\n  // Function to sort and update comments whenever commentDatas or postID changes\n  useEffect(() => {\n    const filteredComments = commentDatas.filter(comment => comment.postID === postID);\n    const sorted = filteredComments.sort((a, b) => new Date(b.dateCreated) - new Date(a.dateCreated));\n    setSortedComments(sorted);\n  }, [commentDatas, postID]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commentContainer\",\n    children: sortedComments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: comment.createdBy.displayProfile ? comment.createdBy.displayProfile : `https://robohash.org/${comment.createdBy.userID}?set=set2`,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: comment.commentText\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"UqgAu5sIoVG+DJMRiOL1ip0We/Y=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Comments","commentDatas","postID","enableComment","_s","sortedComments","setSortedComments","filteredComments","filter","comment","sorted","sort","a","b","Date","dateCreated","className","children","map","index","src","createdBy","displayProfile","userID","alt","fileName","_jsxFileName","lineNumber","columnNumber","commentText","_c","$RefreshReg$"],"sources":["C:/Projects/Projects/LogoLab/src/components/comments/comments.components.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./comments.styles.scss\";\r\n\r\nconst Comments = ({ commentDatas, postID, enableComment }) => {\r\n  const [sortedComments, setSortedComments] = useState([]);\r\n\r\n  // Function to sort and update comments whenever commentDatas or postID changes\r\n  useEffect(() => {\r\n    const filteredComments = commentDatas.filter(\r\n      (comment) => comment.postID === postID\r\n    );\r\n    const sorted = filteredComments.sort(\r\n      (a, b) => new Date(b.dateCreated) - new Date(a.dateCreated)\r\n    );\r\n    setSortedComments(sorted);\r\n  }, [commentDatas, postID]);\r\n\r\n  return (\r\n    <div className=\"commentContainer\">\r\n      {sortedComments.map((comment, index) => (\r\n        <div>\r\n          <img\r\n            src={\r\n              comment.createdBy.displayProfile\r\n                ? comment.createdBy.displayProfile\r\n                : `https://robohash.org/${comment.createdBy.userID}?set=set2`\r\n            }\r\n            alt=\"\"\r\n          />\r\n          <div key={index}>{comment.commentText}</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,YAAY;EAAEC,MAAM;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMU,gBAAgB,GAAGN,YAAY,CAACO,MAAM,CACzCC,OAAO,IAAKA,OAAO,CAACP,MAAM,KAAKA,MAClC,CAAC;IACD,MAAMQ,MAAM,GAAGH,gBAAgB,CAACI,IAAI,CAClC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACD,CAAC,CAACE,WAAW,CAAC,GAAG,IAAID,IAAI,CAACF,CAAC,CAACG,WAAW,CAC5D,CAAC;IACDT,iBAAiB,CAACI,MAAM,CAAC;EAC3B,CAAC,EAAE,CAACT,YAAY,EAAEC,MAAM,CAAC,CAAC;EAE1B,oBACEH,OAAA;IAAKiB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,EAC9BZ,cAAc,CAACa,GAAG,CAAC,CAACT,OAAO,EAAEU,KAAK,kBACjCpB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QACEqB,GAAG,EACDX,OAAO,CAACY,SAAS,CAACC,cAAc,GAC5Bb,OAAO,CAACY,SAAS,CAACC,cAAc,GAC/B,wBAAuBb,OAAO,CAACY,SAAS,CAACE,MAAO,WACtD;QACDC,GAAG,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eACF7B,OAAA;QAAAkB,QAAA,EAAkBR,OAAO,CAACoB;MAAW,GAA3BV,KAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA4B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACxB,EAAA,CA/BIJ,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAiCd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}